name: Deploy CloudSecure to AWS EC2

on:
  push:
    branches:
      - cicd-v2

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
        env:
          NODE_OPTIONS: --max-old-space-size=6144

      - name: Build React App
        run: |
          set -e
          cd app/client
          npm install --loglevel=verbose > npm-install.log 2>&1 || { cat npm-install.log; exit 1; }
          CI=false npm run build > build.log 2>&1 || { cat build.log; exit 1; }
          ls -la build  # Confirm build directory exists
        env:
          NODE_OPTIONS: --max-old-space-size=6144

      - name: Upload Build Directory
        uses: actions/upload-artifact@v4
        with:
          name: build-directory
          path: app/client/build

      - name: Upload Build Logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: build-logs
          path: |
            app/client/npm-install.log
            app/client/build.log

      # Other steps (Terraform, AWS credentials, etc.) remain unchanged
      # ...

      - name: Download Build Directory
        uses: actions/download-artifact@v4
        with:
          name: build-directory
          path: app/client/build

      - name: Deploy Docker Compose
        run: |
          ssh -o StrictHostKeyChecking=no -i /home/runner/key.pem ec2-user@${{ steps.ec2-ip.outputs.ip }} << 'EOF'
            sudo dnf update -y
            sudo dnf install -y docker
            sudo systemctl start docker
            sudo systemctl enable docker
            sudo usermod -aG docker ec2-user
            sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
            sudo chmod +x /usr/local/bin/docker-compose
            mkdir -p /home/ec2-user/cloudsecure
          EOF
          cd $GITHUB_WORKSPACE
          ls -la app/client/build  # Verify build directory is present
          scp -i /home/runner/key.pem -r ./app/client/build ec2-user@${{ steps.ec2-ip.outputs.ip }}:/home/ec2-user/cloudsecure/app/client/build
          scp -i /home/runner/key.pem ./app/server/package.json ec2-user@${{ steps.ec2-ip.outputs.ip }}:/home/ec2-user/cloudsecure/app/server/
          scp -i /home/runner/key.pem ./app/server/server.js ec2-user@${{ steps.ec2-ip.outputs.ip }}:/home/ec2-user/cloudsecure/app/server/
          scp -i /home/runner/key.pem ./app/server/Dockerfile ec2-user@${{ steps.ec2-ip.outputs.ip }}:/home/ec2-user/cloudsecure/app/server/
          scp -i /home/runner/key.pem ./docker-compose.yml ec2-user@${{ steps.ec2-ip.outputs.ip }}:/home/ec2-user/cloudsecure/
          ssh -o StrictHostKeyChecking=no -i /home/runner/key.pem ec2-user@${{ steps.ec2-ip.outputs.ip }} << 'EOF'
            cd /home/ec2-user/cloudsecure
            sudo /usr/local/bin/docker-compose up -d --build
          EOF