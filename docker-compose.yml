version: '3.8'

services:
  client:
    image: cvcharanraj/cloudsecure-client:latest  # Pull from Docker Hub
    container_name: cloudsecure-client
    environment:
      - REACT_APP_API_URL=http://cloudsecure-server:3000
      - API_BASE_URL=http://cloudsecure-server:3000
      - NODE_ENV=production
    ports:
      - "80:80"
    depends_on:
      - server
    restart: always
    networks:
      - app-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  server:
    image: cvcharanraj/cloudsecure-server:latest  # Pull from Docker Hub
    container_name: cloudsecure-server
    ports:
      - "3000:3000"
    depends_on:
      - redis-service
      - mongo-service
    environment:
      - MONGODB_URI=mongodb://mongo-user:mongo-password@mongo-service:27017/cloudsecure?authSource=admin
      - PORT=3000
      - NODE_ENV=production
    restart: unless-stopped
    networks:
      - app-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]  # Adjust if no /health endpoint
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  mongo-service:
    image: mongo:latest
    container_name: mongo-service
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongo-user
      MONGO_INITDB_ROOT_PASSWORD: mongo-password
      MONGO_INITDB_DATABASE: cloudsecure
    ports:
      - "27017:27017"  # Remove in production if not needed
    volumes:
      - mongo_data:/data/db
    restart: always
    networks:
      - app-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  redis-service:
    image: redis:latest
    container_name: redis-service
    ports:
      - "6379:6379"  # Remove in production if not needed
    restart: always
    networks:
      - app-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

networks:
  app-network:
    driver: bridge

volumes:
  mongo_data: